/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2012                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

mergeType points;   // Merge points instead of topology

scale   1;

//- Half angle of wedge in degrees
halfAngle 1.0;

//- Radius of pipe [m]
radius  64;

//- Radius of inner pipe [m]
citi  12.7;

y1               #eval{ $citi*sin(degToRad($halfAngle)) };
y2               #eval{ $radius*sin(degToRad($halfAngle)) };


z1               #eval{ $citi*cos(degToRad($halfAngle)) };
z2           #eval{ $radius*cos(degToRad($halfAngle)) };

minY1         #eval{ -1*$y1 };
minY2         #eval{ -1*$y2 };

minZ            #eval{ -1*$z1 };

vertices
(
    (0  0 0)        //0
    (25.4 0 0)        //1
    (289 0 0)        //2

    (0  $minY1 $z1)   //3
    (25.4 $minY1 $z1)   //4
    (289 $minY1 $z1)   //5

    (0  $minY2 $z2)   //6
    (25.4 $minY2 $z2)   //7
    (289 $minY2 $z2)   // 8

    (0  $y1 $z1)      //9
    (25.4 $y1 $z1)      //10
    (289 $y1 $z1)      //11

    (0  $y2 $z2)      //12
    (25.4 $y2 $z2)      //13
    (289 $y2 $z2)      //14

    (0  $minY1 $z1)   //15
    (25.4 $minY1 $z1)   //16
    (25.4  $y1 $z1)      //17
    (0 $y1 $z1)      //18

);

blocks
(
    hex (0 1 1 0 3 4 10 9) (400 1 400) simpleGrading (1 1 1) //I
    hex (1 2 2 1 4 5 11 10) (400 1 400) simpleGrading (1 1 1) //II
    hex (15 16 17 18 6 7 13 12) (400 1 400) simpleGrading (1 1 1) //III
    hex (4 5 11 10 7 8 14 13) (400 1 400) simpleGrading (1 1 1) //IV
);

edges
(
/*
//I
    arc 3 9 origin (0 0 0)
    arc 4 10 origin (25.4 0 0)

//III
    arc 6 12 origin (0 0 0)
    arc 15 18 origin (0 0 0)
    arc 7 13 origin (25.4 0 0)

//IV
    arc 8 14 origin (289 0 0)
    arc 5 11 origin (289 0 0)
*/
);

boundary
(
    inlet-I
    {
        type patch;
        faces
        (
            (0 3 9 0)
        );
    }

    inletWall-III
    {
        type patch;
        faces
        (
            (15 6 12 18)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (2 2 11 5) //II
	    (5 11 14 8) //IV
        );
    }

    back
    {
        type wedge;
        faces
        (
            (0 1 4 3)		//I
		 (1 2 5 4)		//II
		 (15 16 7 6)	//III
            (4 5 8 7)		//IV
        );
    }

    front
    {
        type wedge;
        faces
        (
            (0 9 10 1)		//I
		 (1 10 11 2)		//II
		 (18 12 13 17)		//III
            (10 13 14 11)		//IV
        );
    }

    topWall
    {
        type patch;
        faces
        (
            (6 7 13 12)	//III
            (7 8 14 13)	//IV
        );
    }

    axis
    {
        type empty;
        faces
        (
            (0 1 1 0)	//I
            (1 2 2 1)	//II
        );
    }

    internalWall
    {
        type wall;
        faces
        (
            (3 4 10 9) //I
            (15 18 17 16) //III
        );
    }

    antWall-III
    {
        type wall;
        faces
        (
            (16 17 13 7) //I
        );
    }

    antWall-IV
    {
        type wall;
        faces
        (
            (4 7 13 10) //IV
        );
    }

);

mergePatchPairs
(
	(antWall-III		antWall-IV)
);


// ************************************************************************* //
